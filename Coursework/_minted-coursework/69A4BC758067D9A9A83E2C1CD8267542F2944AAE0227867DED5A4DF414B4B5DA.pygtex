\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{using} \PYG{n}{System}\PYG{p}{.}\PYG{n}{Collections}\PYG{p}{;}
\PYG{k}{using} \PYG{n}{System}\PYG{p}{.}\PYG{n}{Collections}\PYG{p}{.}\PYG{n}{Generic}\PYG{p}{;}
\PYG{k}{using} \PYG{n}{UnityEngine}\PYG{p}{;}

\PYG{k}{public} \PYG{k}{class} \PYG{n+nc}{ArrowScript} \PYG{o}{:} \PYG{n}{MonoBehaviour}
\PYG{p}{\PYGZob{}}
    \PYG{p}{[}\PYG{n}{SerializeField}\PYG{p}{]} \PYG{k}{private} \PYG{k+kt}{bool} \PYG{n}{isRight}\PYG{p}{;}
    \PYG{p}{[}\PYG{n}{SerializeField}\PYG{p}{]} \PYG{k}{private} \PYG{k+kt}{float} \PYG{n}{speed}\PYG{p}{;}
    \PYG{k}{private} \PYG{n}{Rigidbody2D} \PYG{n}{myrb}\PYG{p}{;}
    \PYG{k}{private} \PYG{n}{Animator} \PYG{n}{anime}\PYG{p}{;}
    \PYG{c+c1}{// Start is called before the first frame update}
    \PYG{k+kt}{void} \PYG{n+nf}{Start}\PYG{p}{()}
    \PYG{p}{\PYGZob{}}\PYG{c+c1}{//initialize rigidbody, animator and speed to needed direction}
        \PYG{n}{anime} \PYG{o}{=} \PYG{n}{GetComponent}\PYG{o}{\PYGZlt{}}\PYG{n}{Animator}\PYG{o}{\PYGZgt{}}\PYG{p}{();}
        \PYG{n}{myrb} \PYG{o}{=} \PYG{n}{GetComponent}\PYG{o}{\PYGZlt{}}\PYG{n}{Rigidbody2D}\PYG{o}{\PYGZgt{}}\PYG{p}{();}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{isRight}\PYG{p}{)} \PYG{n}{myrb}\PYG{p}{.}\PYG{n}{velocity} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Vector2}\PYG{p}{(}\PYG{n}{speed}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{);}
        \PYG{k}{else} \PYG{n}{myrb}\PYG{p}{.}\PYG{n}{velocity} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Vector2}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{n}{speed}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+c1}{// Update is called once per frame}
    \PYG{k+kt}{void} \PYG{n+nf}{Update}\PYG{p}{()}
    \PYG{p}{\PYGZob{}}
        
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{private} \PYG{k+kt}{void} \PYG{n+nf}{OnTriggerEnter2D}\PYG{p}{(}\PYG{n}{Collider2D} \PYG{n}{collision}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{k}{switch} \PYG{p}{(}\PYG{n}{collision}\PYG{p}{.}\PYG{n}{gameObject}\PYG{p}{.}\PYG{n}{tag}\PYG{p}{)}
        \PYG{p}{\PYGZob{}}\PYG{c+c1}{//Collision with Ground or Player == broke}
            \PYG{k}{case} \PYG{l+s}{\PYGZdq{}Ground\PYGZdq{}}\PYG{o}{:}
                \PYG{p}{\PYGZob{}}
                    \PYG{n}{myrb}\PYG{p}{.}\PYG{n}{velocity} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Vector2}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{o}{\PYGZhy{}}\PYG{l+m+mf}{0.5f}\PYG{p}{);}
                    \PYG{n}{myrb}\PYG{p}{.}\PYG{n}{gravityScale} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
                    \PYG{n}{anime}\PYG{p}{.}\PYG{n}{SetBool}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Broken\PYGZdq{}}\PYG{p}{,} \PYG{n+nb}{true}\PYG{p}{);}
                \PYG{p}{\PYGZcb{}}
                \PYG{k}{break}\PYG{p}{;}
            \PYG{k}{case} \PYG{l+s}{\PYGZdq{}Player\PYGZdq{}}\PYG{o}{:}
                \PYG{p}{\PYGZob{}}
                    \PYG{n}{myrb}\PYG{p}{.}\PYG{n}{velocity} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Vector2}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{o}{\PYGZhy{}}\PYG{l+m+mf}{0.5f}\PYG{p}{);}
                    \PYG{n}{myrb}\PYG{p}{.}\PYG{n}{gravityScale} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
                    \PYG{n}{anime}\PYG{p}{.}\PYG{n}{SetBool}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Broken\PYGZdq{}}\PYG{p}{,} \PYG{n+nb}{true}\PYG{p}{);}
                \PYG{p}{\PYGZcb{}}
                \PYG{k}{break}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{private} \PYG{k+kt}{void} \PYG{n+nf}{EndArrow}\PYG{p}{()}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{Destroy}\PYG{p}{(}\PYG{n}{gameObject}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
